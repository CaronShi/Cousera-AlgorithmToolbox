import math
#digit = 5,8,7,4,8,9
#symbol = -,+,*,-,+

#clear the raw data, make it calculable
#creat a func to calculate a(1st number),b(next number)
def calc(a, b, op):
    if op == "-":
        return a-b
    elif op == "+":
        return a+b
    elif op == "*":
        return a*b

#create a function for finding the maximun value of every pair of i,j
#M is the maximun of i-j, m is the minimun,i to j a range that contain numbers of digits
def MinAndMax(M,m,i,j,operators):
    #for comparing with the first item, because the first item compares with nobody
    min_value = math.inf
    max_value = -math.inf
    #there are four ways to calculate i&j, we need a for loop
    #recur 'k' for moving the index of 2d array
    #k is the kth number in the 2d array, k+1 is the next number
    for k in range(i,j):
        a = calc(M[i][k],m[k+1][j],operators[k])
        b = calc(M[i][k],M[k+1][j],operators[k])
        c = calc(m[i][k], M[k+1][j], operators[k])
        d = calc(m[i][k], m[k+1][j], operators[k])
        #find the maximun value of i,j
        min_value = min(min_value,a,b,c,d)
        max_value = max(max_value,a,b,c,d)
    return min_value,max_value

def get_maximun_value(operands,operators):
    n = len(operands)
    #2d array for min&Max
    m = [[None for x in range(n)] for x in range(n)]
    M = [[None for x in range(n)] for x in range(n)]

    for i in range(n):
        #operands are the integers
        m[i][i] = operands[i]
        M[i][i] = operands[i]
    for s in range(1,n):#if n=6, s = 1,2,3,4,5
        for i in range(0,n-s):#n-s = 5,4,3,2,1, but i is reverse(x-axis)
            j = s+i #s = 1, i = i, j=6，5，4，3，2 (y-axis)
            #formally create a 2D array combing with MinAndMax func
            m[i][j],M[i][j] = MinAndMax(M,m,i,j,operators)
    return M[0][n-1] #which is the maximun value, the 1st line's rightest number

if __name__ == '__main__':
    expression = input()
    operators, operands = [],[]
    for i in expression:
        if i in ['+','-','*']: #all symbols
            operators.append(i)
        else:
            operands.append(int(i))#all integers

print(get_maximun_value(operands,operators))
